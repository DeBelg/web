---
const { item } = Astro.props;
import { format, compareAsc, addDays } from 'date-fns'

function dateFormat (str) {
    if (str.match(/^\d{4}-\d{2}-\d{2}$/)) {
        return format(new Date(str), 'MMM d, yyyy')
    }
    const qm = str.match(/^(\d{4})\/(\w+)$/)
    if (qm) {
        return `${qm[2]}, ${qm[1]}`
    }
    return str
}

function nameRenderer (item) {
    let num;
    let ccm = item.coincidence?.match(/\[(\w+)\]/)
    let cc = ccm && ccm[1] ? ccm[1] : (item.coincidence ? item.coincidence : null)
    switch (item.type) {
        case 'summit':
            num = item.id.match(/^w3ps(\d+)$/)[1]
            return `Summmit #${num} ${item.city}`// + (cc ? ` @ ${cc}` : '')
            break;
        case 'meetup':
            num = item.id.match(/(\d+)$/)
            return `Meetup ${item.city} #${num ? num[1] : 'TBD'}`// + (cc ? ` @ ${cc}` : '')
            break;
        case 'hackathon':
            num = item.id.match(/^w3ph(\d+)$/)[1]
            return `Hackathon #${num} ${item.city}`// + (cc ? ` @ ${cc}` : '')
            break;
    }
}

function ccRenderer (item) {
    let ccm = item.coincidence?.match(/\[(\w+)\]/)
    let cc = ccm && ccm[1] ? ccm[1] : (item.coincidence ? item.coincidence : null)
    return cc
}

function dateEnd(str, days) {
    return format(addDays(new Date(str), days), 'yyyy-MM-dd');
}

---

<div class="w3pn-event-item">
    <div class="event-header flex">
        <div class="header-base sm:flex gap-4 grow px-3 py-2.5 sm:px-4 sm:py-3 cursor-pointer">
            <div class="w-full sm:w-28 flex sm:block sm:text-right leading-normal">
                <div class="">{dateFormat(item.date)}</div>
                {item.days && item.days > 1 &&
                    <div class="ml-1.5"> <span class="inline-block sm:hidden">- </span>{dateFormat(dateEnd(item.date, item.days))}</div>
                }
            </div>
            <div>
                <div class="text-lg text-white">{nameRenderer(item)}</div>
                <div class="flex gap-2">
                    <img src={`/flags/${item.country}.svg`} class="w-4" />
                    <div>
                        {item.city}, {item.country.toUpperCase()}
                        {item.coincidence &&
                            <span>&nbsp; - {ccRenderer(item)}</span>
                        }
                    </div>
                </div>
            </div>
            {item.links?.rsvp &&
                <div class="py-1 grow text-right">
                    <a href={item.links?.rsvp} class="button inverted"><button>Join</button></a>
                </div>
            }

        </div>

    </div>
    <div class="detail hidden flex sm:gap-4">
        <div class="w-0 sm:w-28"></div>
        <div>
            <div>Date: <span class="text-white">{dateFormat(item.date)} {item.days ? ' - ' + dateFormat(dateEnd(item.date, item.days)) + ` (${item.days} days)` : ''}</span></div>
            <div>Lead: <span class="text-white">{item.lead || 'n/a'}</span></div>

            <div class="mt-4 mb-2">
                {item.links?.rsvp &&
                    <a href={item.links.rsvp} class="button inverted"><button>More details & RSVP</button></a>
                }
                {item.links?.web &&
                    <a href={item.links.web} class="button inverted"><button>Website</button></a>
                }
            </div>
        </div>
    </div>
</div>